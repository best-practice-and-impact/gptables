name: continuous-integration

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:

jobs:
  test-with-cov:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -e .[testing]
        
    - name: Run pytest
      run: |
        pytest --cov-config=.coveragerc --cov=gptables --cov-report=xml --cov-report=term-missing
        coverage xml

    - name: Upload to Codecov
      if: github.repository == 'best-practice-impact/gptables'
      uses: codecov/codecov-action@v3
      with:
        name: gptables-pytests-py3.8
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  linux:

    name: Tests on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']
        
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade-strategy eager -e .[testing]
    - name: Run pytest
      run: pytest

  windows:

    name: Tests on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade-strategy eager -e .[testing]
    - name: Run pytest
      run: pytest

  build_and_deploy_docs:
    name: Build and deploy docs to Pages
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade-strategy eager -e .[docs]
    - name: Build the book
      run: |
        (cd docs && make clean && make html)
        
  publish:
    name: Publish to PyPi
    needs: [linux, windows, test-with-cov]
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build package
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
